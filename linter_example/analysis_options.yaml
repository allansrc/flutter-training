# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.


linter:
  rules:
    # from flutter_lints package
    - avoid_print
    - avoid_unnecessary_containers
    - avoid_web_libraries_in_flutter
    - no_logic_in_create_state
    - prefer_const_constructors
    - prefer_const_constructors_in_immutables
    - prefer_const_declarations
    - prefer_const_literals_to_create_immutables
    - sized_box_for_whitespace
    - sort_child_properties_last
    - use_build_context_synchronously
    - use_full_hex_values_for_flutter_colors
    - use_key_in_widget_constructors
  
    # from lints package (core.yaml)
    - avoid_empty_else
    - avoid_relative_lib_imports
    - avoid_shadowing_type_parameters
    - avoid_types_as_parameter_names
    - await_only_futures
    - camel_case_extensions
    - camel_case_types
    - curly_braces_in_flow_control_structures
    - depend_on_referenced_packages
    - empty_catches
    - file_names
    - hash_and_equals
    - iterable_contains_unrelated_type
    - list_remove_unrelated_type
    - no_duplicate_case_values
    - non_constant_identifier_names
    - null_check_on_nullable_type_parameter
    - package_prefixed_library_names
    - prefer_generic_function_type_aliases
    - prefer_is_empty
    - prefer_is_not_empty
    - prefer_iterable_whereType
    - prefer_typing_uninitialized_variables
    - provide_deprecation_message
    - unnecessary_overrides
    - unrelated_type_equality_checks
    - valid_regexps
    - void_checks

    # lints package (recommended.yaml)
    - annotate_overrides
    - avoid_init_to_null
    - control_flow_in_finally
    - implementation_imports
    - null_closures
    - prefer_adjacent_string_concatenation
    - prefer_collection_literals
    - prefer_conditional_assignment
    - prefer_contains 
    - prefer_final_fields
    - prefer_if_null_operators 
    - prefer_inlined_adds
    - prefer_is_not_operator
    - prefer_spread_collections
    - recursive_getters
    - slash_for_doc_comments
    - type_init_formals
    - unnecessary_brace_in_string_interps
    - unnecessary_const
    - unnecessary_constructor_name 
    - unnecessary_getters_setters
    - unnecessary_late
    - unnecessary_new
    - unnecessary_string_interpolations
    - unnecessary_this
    - use_rethrow_when_possible


analyzer:
  plugins:
    - dart_code_metrics
  

dart_code_metrics:
  metrics:
    cyclomatic-complexity: 20
    number-of-parameters: 4
    maximum-nesting-level: 5
  metrics-exclude:
    - test/**
  rules:
    # Dart rules
    - avoid-global-state
    - avoid-ignoring-return-values
    - avoid-missing-enum-constant-in-map
    - avoid-nested-conditional-expressions:
        acceptable-level: 2
    - avoid-unnecessary-type-assertions
    - avoid-unnecessary-type-casts
    - avoid-unused-parameters
    - binary-expression-operand-order
    - double-literal-format
    - member-ordering-extended:
        alphabetize: true
    - newline-before-return
    - no-empty-block
    - no-equal-arguments
    - no-equal-then-else
    - prefer-async-await
    - prefer-conditional-expressions
    - prefer-correct-identifier-length:
        exceptions: [ 'z' ]
        max-identifier-length: 20
        min-identifier-length: 4
    - prefer-first
    - prefer-immediate-return
    - prefer-last
    - prefer-match-file-name
    - prefer-moving-to-variable
    - prefer-trailing-comma

    # Flutter Rules: 
    - always-remove-listener
    - avoid-returning-widgets
    - avoid-wrapping-in-padding
    - prefer-extracting-callbacks
    - prefer-single-widget-per-file:
        ignore-private-widgets: true
  anti-patterns:
    - long-method
    - long-parameter-list

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
